<!-- Usage:
    - write sparql
    - combine with a group-by tree like this
    - write an xslt for transforming this tree
-->
<st:sparqltree xmlns:st="http://oort.to/ns/2008/09/sparqltree"
               xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
               xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
               xmlns:owl="http://www.w3.org/2002/07/owl#"
               xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
               xmlns:dct="http://purl.org/dc/terms/"
               xmlns:foaf="http://xmlns.com/foaf/0.1/"
               xmlns:rpubl="http://rinfo.lagrummet.se/ns/2008/11/rinfo/publ#"
               order-by="DESC(?subject)"
               distinct="true"
               >
  <!--
               limit="100" offset="0"
  -->

  <subject><!-- uri="http://rinfo.lagrummet.se/publ/sfs/1999:175"-->
      a <type> .
      OPTIONAL {
        ?type rdfs:label <typeLabel/> .
        <!-- FILTER( LANG(?typeLabel) = 'sv' ) -->
      }
    </type>
    OPTIONAL { ?subject dct:title <dcTitle/> }

    {
      ?subject
        ripub:forfattningssamling [
          rdfs:label <serieLabel/>
        ];
        ripub:fsNummer <serieNummer/> .
    } UNION {
        ?subject
            ripub:utrSerie ?serie;
            ripub:utrSerienummer ?serieNummer .
        OPTIONAL { ?serie rdfs:label ?serieLabel }
    <!-- Rattsfallsreferat
    } UNION {
    -->
    } UNION {
        ?subject a ripub:KonsolideradGrundforfattning;
          ripub:konsoliderar [
            ripub:forfattningssamling [
            <!-- TODO: shortLabel.. -->
              rdfs:label ?serieLabel;
            ];
            ripub:fsNummer ?serieNummer
          ];
          ripub:utfardandedatum <konsDatum/> .
    <!-- TODO: see uri-minter for remaining.. -->
    } UNION {
            <!-- TODO: shortLabel (of typeLabel) -->
        ?subject ?rattsdokNrProp <rattsdokNr/> .
        ?rattsdokNrProp rdfs:subPropertyOf ripub:rattsdokumentnummer .
    }

    OPTIONAL {
        ?subject dct:publisher <publisher> .
      OPTIONAL {
        ?publisher rdfs:label <publisherLabel/> .
      }
    }
    </publisher>

    OPTIONAL {
      ?subject <dateRel> <dateValue/> .
    </dateRel>
      FILTER(datatype(?dateValue) = xsd:date)
    }

    OPTIONAL {
    ?subject <rel> <relSubject> .
        FILTER( isURI(?relSubject) )
        OPTIONAL {
            ?relSubject a ?relType .
        }
      OPTIONAL {
        ?relSubject rdfs:label <relText/> .
      }
      </relSubject>
      OPTIONAL {
          ?rel rdfs:label <relLabel/> .
        OPTIONAL {
          ?rel rdfs:subPropertyOf <superRel/> .
        }
      }
      <!-- TODO:
        inclusive "?relType subClassOf Rattsinformationsdokument" instead?
          - no? must find doc via of related *parts* as well!
          - depends on if query is run against store or incoming subgraph.
      # Current, too loose variant:
      FILTER( !BOUND(?superRel) ||
              ?superRel != dct:hasPart &amp;&amp;
              ?superRel != ripub:publikationssamling )
      # Using *raw* "some kind of rinfo-doc" filter..:
      -->
      FILTER(
          (!BOUND(?superRel) ||
            ?superRel != dct:hasPart &amp;&amp;
            ?superRel != ripub:publikationssamling ) &amp;&amp;
          REGEX(STR(?relSubject), "^http://rinfo\\.lagrummet\\.se/publ/")
        )
    }
    </rel>

    <rev st:as-var="no">
    OPTIONAL {
      <revSubject/> ?rev ?subject .
        OPTIONAL {
          ?rev owl:inverseOf ?invRev .
          ?invRev rdfs:label <revLabel/> .
        }
    }
    </rev>

  </subject>

</st:sparqltree>
