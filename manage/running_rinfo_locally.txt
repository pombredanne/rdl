########################################################################
Running the RInfo System Locally
########################################################################


Getting Started
========================================================================

It's recommended to run all components of the RInfo System on your local
machine during development. To do this from scratch, you need:

* Java JDK 1.6+ - <http://java.sun.com/javase/downloads/widget/jdk6.jsp>
* Maven 2.0.9+ - <http://maven.apache.org/>
* Tomcat 6+ - <http://tomcat.apache.org/>

To use the various instrumental tools used you also need:

* Groovy 1.7.4+ - <http://groovy.codehaus.org/Download>

  - See ``../tools/README.txt``.

* Python 2.5+ - <http://www.python.org/download/>

  - For management (such as deployment): see ``README.txt``.
  - For acceptance spec testing: see ``../documentation/spec/README.txt``
    (NOTE: these are peripheral right now, so you can skip this part).


Setting up the environment
========================================================================

Sesame
------------------------------------------------------------------------

You need a Java webapp container (e.g. Tomcat) to run the Sesame RDF Repository
server (expected to run at ``http://localhost:8080/openrdf-sesame/``).

Package sesame::

  $ cd packages/java/rinfo-sesame-http/
  $ mvn package

Then copy ``openrdf-sesame.war`` and ``sesame-workbench.war`` in
``target/dependency`` to the container (e.g. ``$TOMCAT_HOME/webapps``).

Data directories
------------------------------------------------------------------------

These directories needs to be writable by the user used to run maven and groovy.

* /opt/work/rinfo/ => EMPTY!
* /opt/work/rinfo/depots/rinfo/ => EMPTY!

The RInfo Applications
------------------------------------------------------------------------

Install the shared rinfo packages to your local maven repo by::

  $ cd packages/java
  $ mvn install

Now you are ready to start up:

* Create and serve integration test data:

  example-store
      serving some example data.

  base prototype feed
      for base data (models, containers; organization, feeds).

  These can be served by running::

    $ cd tools/rinfomain/
    $ ./map_feeds_and_base.sh
    $ groovy serve_folder.groovy

  Go to <http://localhost:8280/feed/current> to verify that it contains a 
  valid feed. This is basically an admin feed for the main application and 
  a couple of test sources.

* Start local instance of the RInfo system:

  rinfo-main
      Collects from the sources defined for development mode (a base/admin
      prototype feed and example suppliers) and supplies the main data feed.
      Run it with "mvn jetty:run" from the rinfo-main directory. To populate
      rinfo-main with data you must trigger several collects.
      
      # Collect the admin feed
      curl --data 'feed=http://localhost:8280/feed/current' http://localhost:8180/collector
      
      # Collect the sources as pointed out in the admin feed
      curl --data 'feed=http://localhost:8280/arbetsformedlingen.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/boverket.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/jordbruksverket.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/slv.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/regeringen.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/komdir.regeringen.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/riksarkivet.se/current.atom' http://localhost:8180/collector
      curl --data 'feed=http://localhost:8280/verva.se/current.atom' http://localhost:8180/collector
      
      Verify that rinfo-main is up and running by going to 
      http://localhost:8180/feed/current which should contain a valid feed.
      
      Additional information can be found in:
      ``../packages/java/rinfo-main/README.txt``.

  rinfo-service
      Collects from rinfo-main into the sesame RDF repo, making data available
      for its data views. In order to run rinfo-service you need to first have
      openrdf-sesame started. It can be started by running "mvn jetty:run-war"
      in the rinfo-sesame-http directory. After that you can start rinfo-service
      by running "mvn jetty:run" from the rinfo-service directory. To populate
      rinfo-service with data you must trigger a collect of rinfo-main:
      
      curl --data 'feed=http://localhost:8180/feed/current' http://localhost:8181/collector
      
      Verify that rinfo-service is up and running by going to 
      http://localhost:8181/view/org which should contain the list of 
      organisations present in the test data.
      
      Additional information can be found in:
      ``../packages/java/rinfo-service/README.txt``.


In Depth
========================================================================

To get an *understanding* of how a staging or production environment is set up,
you can study the deployment script in ``fabfile.py`` and the scripts it
includes to provide setup and deployment commands.

