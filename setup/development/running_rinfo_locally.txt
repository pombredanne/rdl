########################################################################
Running the RInfo System Locally
########################################################################

Getting Started
========================================================================

It's recommended to run all components of the RInfo System on your local
machine during development. To do this from scratch, you need:

* Java JDK 1.6+
* Tomcat 6+

To use the various instrumental tools used you also need:

* Groovy 1.6+
* Python 2.5+ (for acceptance spec testing and deployment)

Setting up the environment
========================================================================

Tomcat
------------------------------------------------------------------------

You need a Java webapp container (e.g. Tomcat) to run the Sesame RDF Repository
server (expected to run at ``http://localhost:8080/openrdf-sesame/``).

Package sesame::

    $ cd packages/java/rinfo-sesame-http/
    $ mvn package

Then copy ``openrdf-sesame.war`` and ``sesame-workbench.war`` in
``target/dependency`` to the container (e.g. ``$TOMCAT_HOME/webapps``).

Data directories
------------------------------------------------------------------------

* /opt/_workapps/rinfo/depots/rinfo/ => EMPTY!
* /opt/_workapps/rinfo/depots/example.org/ => With data from e.g. laboratory..

The RInfo Applications
------------------------------------------------------------------------

Install the shared rinfo packages to your local maven repo by::

    $ cd packages/java
    $ mvn install

Now you are ready to start up:

example-store
    serving some example data.

base prototype feed
    for base data (models, containers; organization, feeds).

rinfo-main
    collects from the sources defined for development mode (a base/admin
    prototype feed and example suppliers) and supplies the main data feed.

rinfo-service
    feeds from rinfo-main into the sesame RDF repo, making data abailable for
    its data views.

In Depth
========================================================================

To get an *understanding* of how a staging or production environment is set up,
you can study the deployment script in ``../fabfile.py`` and the scripts it
includes to provide setup and deployment commands.

